spring.application.name=SecureNotesPracticeProject

#Datasource
#spring.datasource.url=jdbc:mysql://localhost:5432/SecureNotesPracticeProject
#spring.datasource.username=root
#spring.datasource.password=password

# PostgreSQL
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Tell Hibernate to auto-create/update tables
spring.jpa.hibernate.ddl-auto=update

spring.datasource.hikari.auto-commit=false


# Show SQL in console
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# Optional but recommended
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect



# Hibernate auto 
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Security
spring.security.user.name=Vishal
spring.security.user.password=pass123

# logs
logging.level.org.springframework.security=DEBUG

# OAuth Clients

spring.app.jwtSecret=${jwtSecret}

#frontend url
frontend.url=${FRONTEND_URL}

#Email Confis
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${spring.mail.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default.mail.id=${defaultMail}

# OAuthClients

# OAUTH2 Client Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# OAUTH2 Client Github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}




